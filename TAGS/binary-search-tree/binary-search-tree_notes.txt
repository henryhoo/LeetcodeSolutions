******************************contains-duplicate-iii
 Given an array of integers, find out whether there are two distinct indices i
and j in the array such that the difference between nums[i] and nums[j] is at
most t and the difference between i and j is at most k .   Subscribe to see
which companies asked this question    Show Tags   Binary Search Tree     Show
Similar Problems   (E) Contains Duplicate  (E) Contains Duplicate II

******************************count-of-range-sum
 Given an integer array nums , return the number of range sums that lie in
[lower, upper] inclusive. Range sum S(i, j) is defined as the sum of the
elements in nums between indices i and j ( i â‰¤ j ), inclusive.   Note: A naive
algorithm of O ( n 2 ) is trivial. You MUST do better than that.   Example:
Given nums = [-2, 5, -1] , lower = -2 , upper = 2 , Return 3 . The three ranges
are : [0, 0] , [2, 2] , [0, 2] and their respective sums are: -2, -1, 2 .
Credits: Special thanks to @dietpepsi for adding this problem and creating all
test cases.   Subscribe to see which companies asked this question    Show Tags
Divide and Conquer  Binary Search Tree     Show Similar Problems   (H) Count of
Smaller Numbers After Self

******************************count-of-smaller-numbers-after-self
 You are given an integer array nums and you have to return a new counts array.
The counts array has the property where counts[i] is
the number of smaller elements to the right of nums[i] .  Example:  Given nums =
[5, 2, 6, 1]
To the right of 5 there are 2 smaller elements (2 and 1).
To the right of 2 there is only 1 smaller element (1).
To the right of 6 there is 1 smaller element (1).
To the right of 1 there is 0 smaller element.  Return the array [2, 1, 1, 0] .
Subscribe to see which companies asked this question    Show Tags   Divide and
Conquer  Binary Indexed Tree  Segment Tree  Binary Search Tree     Show Similar
Problems   (H) Count of Range Sum

