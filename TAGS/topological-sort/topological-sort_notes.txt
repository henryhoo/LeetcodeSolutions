******************************course-schedule-ii
 There are a total of n courses you have to take, labeled from 0 to n - 1 .
Some courses may have prerequisites, for example to take course 0 you have to
first take course 1, which is expressed as a pair: [0,1]  Given the total number
of courses and a list of prerequisite pairs , return the ordering of courses you
should take to finish all courses.  There may be multiple correct orders, you
just need to return one of them. If it is impossible to finish all courses,
return an empty array.  For example:  2, [[1,0]]  There are a total of 2 courses
to take. To take course 1 you should have finished course 0. So the correct
course order is [0,1]  4, [[1,0],[2,0],[3,1],[3,2]]  There are a total of 4
courses to take. To take course 3 you should have finished both courses 1 and 2.
Both courses 1 and 2 should be taken after you finished course 0. So one correct
course order is [0,1,2,3] . Another correct ordering is [0,2,1,3] .  Note: The
input prerequisites is a graph represented by a list of edges , not adjacency
matrices. Read more about how a graph is represented .  click to show more
hints.  Hints:   This problem is equivalent to finding the topological order in
a directed graph. If a cycle exists, no topological ordering exists and
therefore it will be impossible to take all courses.  Topological Sort via DFS -
A great video tutorial (21 minutes) on Coursera explaining the basic concepts of
Topological Sort.  Topological sort could also be done via BFS .     Subscribe
to see which companies asked this question    Show Tags   Depth-first Search
Breadth-first Search  Graph  Topological Sort     Show Similar Problems   (M)
Course Schedule  (H) Alien Dictionary  (M) Minimum Height Trees

******************************longest-increasing-path-in-a-matrix
 Given an integer matrix, find the length of the longest increasing path.  From
each cell, you can either move to four directions: left, right, up or down. You
may NOT move diagonally or move outside of the boundary (i.e. wrap-around is not
allowed).   Example 1:  nums = [
[ 9 ,9,4],
[ 6 ,6,8],
[ 2 , 1 ,1]
]   Return 4 The longest increasing path is [1, 2, 6, 9] .   Example 2:  nums =
[
[ 3 , 4 , 5 ],
[3,2, 6 ],
[2,2,1]
]   Return 4 The longest increasing path is [3, 4, 5, 6] . Moving diagonally is
not allowed.  Credits: Special thanks to @dietpepsi for adding this problem and
creating all test cases.   Subscribe to see which companies asked this question
Show Tags   Depth-first Search  Topological Sort  Memoization

******************************course-schedule
 There are a total of n courses you have to take, labeled from 0 to n - 1 .
Some courses may have prerequisites, for example to take course 0 you have to
first take course 1, which is expressed as a pair: [0,1]  Given the total number
of courses and a list of prerequisite pairs , is it possible for you to finish
all courses?  For example:  2, [[1,0]]  There are a total of 2 courses to take.
To take course 1 you should have finished course 0. So it is possible.  2,
[[1,0],[0,1]]  There are a total of 2 courses to take. To take course 1 you
should have finished course 0, and to take course 0 you should also have
finished course 1. So it is impossible.  Note: The input prerequisites is a
graph represented by a list of edges , not adjacency matrices. Read more about
how a graph is represented .  click to show more hints.  Hints:   This problem
is equivalent to finding if a cycle exists in a directed graph. If a cycle
exists, no topological ordering exists and therefore it will be impossible to
take all courses.  Topological Sort via DFS - A great video tutorial (21
minutes) on Coursera explaining the basic concepts of Topological Sort.
Topological sort could also be done via BFS .     Subscribe to see which
companies asked this question    Show Tags   Depth-first Search  Breadth-first
Search  Graph  Topological Sort     Show Similar Problems   (M) Course Schedule
II  (M) Graph Valid Tree  (M) Minimum Height Trees

